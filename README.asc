== Purpose

The purpose of this (non working) project is to be able to execute a trivial exported JsInterop function from a node js runtime environment.

NodeJS does not have a Window object, but it does have a Console object, and the default scope has a few functions that are usually in the Window scope.

== Steps To Replicate Problem

1. Inside this project direction mvn clean package
2. Make sure Maven is installed.
3. Install Nodejs . https://nodejs.org/en/download/
4. To make sure node is installed and on the path type "node" at the command line. If installed, then press control + C twice to exit Node's interactive mode.
5. To run the application type : node app.js

An error will be displayed.

------
$wnd.Error.stackTraceLimit = Error.stackTraceLimit = 64;
                               ^
TypeError: Cannot set property 'stackTraceLimit' of undefined
------

== Step debugging node application in vscode.

https://www.youtube.com/watch?v=2oFKNL7vYV8

== Notes on Node.js

The default object for node.js is the global object. This object contains objects like the Console object.

The main scope (in the starting file) can import modules using the require('filename.js') function.

When a module is loaded via require( .... ), all items in that file are loaded in their own scope object.
To export object so they can be seen by the calling module, a module must use :

module.exports.foo = foo;
module.exports.bar = bar;

(this currently is not done in the m8 linker).

== Questions 

* Does the m8 linker respect GWT compilation obfuscation?
